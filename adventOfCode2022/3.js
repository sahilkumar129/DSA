const getPriorityOfItem = (item) => {
  if (item.toLowerCase() === item) return item.charCodeAt(0) - "a".charCodeAt(0) + 1;
  else return item.charCodeAt(0) - "A".charCodeAt(0) + 27;
};

const sumOfPriorities = (input) => {
  let sum = 0;
  for (const rucksack of input) {
    let i = 0,
      itemSet = new Set();
    for (; i < rucksack.length / 2; i++) itemSet.add(rucksack[i]);
    for (; i < rucksack.length; i++) {
      if (itemSet.has(rucksack[i])) {
        sum += getPriorityOfItem(rucksack[i]);
        break;
      }
    }
  }
  return sum;
};

const input = [
  "RCMRQjLLWGTjnlnZwwnZJRZH",
  "qnvfhpSbvSppNddNdSqbbmmdPrwttJVrVPDVrJtHtwPZhrPJ",
  "BFpFzSSqSFFSvQsnWgCMjTLzng",
  "DbWVcVRRdlLffvtqjTWNgQ",
  "mJJMpsmrMrJSHJpsHrFHvBvgHvqfNvzffgTvfj",
  "mMhPjmjmFPJhMSGGcDRlwRdcLGPc",
  "qFcbmWFJqqWpRJcQWpqsQQQwSPCPrHRHCPdNZtSrSHwrNZ",
  "jGMjGLhhhgTvghgtGVjnNCrPVwZSZffSNSwHZZdH",
  "DvzDlvvhnjlMlglglGGhDLpqqcJWWtsmszpWbBBBmQmb",
  "SPLPHQbJSbPsvTLmfDvVDctvWhcDlD",
  "jdRRzzGgJqwrpMRMgdjlcVcWqfWWlfDlmmlWhB",
  "rwgRGdpGprNNLQLsbZJPsn",
  "GZhTVLztHrSzrRBz",
  "MJWjMvsfSCLSnrJn",
  "MjglcgWMdccvZGFtTDchLLLh",
  "rgDHBgBjRgRTgwzwthBnQwmBtB",
  "MsMpSfMsTGTFFLdFFFMFsnNmthNnzhthtwmWnznz",
  "pZMpJdvJMGRHVJJTVHjb",
  "TQVqZVBcBBdBfbpN",
  "zvzrtCshrntCHslPMMMFpZHbNSpb",
  "hLWhGLttsvLvrrWvhzVmQgwJZTRcggTjGcgT",
  "SqRGLHtSbtNTbhjFTjDDpF",
  "WwgJgmdmMdwPDVQQBBhSBFwV",
  "JMPlmlSldWZmRqtLsRGRtvls",
  "mZvmvPNmlNJPJzzmgNvNgdqqdBSpfHBqSsHqHfwpsffq",
  "nhDQDrwLrVVnqfGnsBGBGGsH",
  "VjCDMhbDjLjtFhtLhLhQjNZcZPwWWcczmvglgJJN",
  "wwqnwZGGZqqMpMprpZqwGlLDtNDffdBdNVBmNGBN",
  "TSTchTFbRLfLmVhNDm",
  "SCLRvJQvRFTSRjqMqPZrZnrzZzjp",
  "cJfqGjgGJcsgsPnghgBm",
  "FHHbQQHLWLbPQThqQQRnZs",
  "lLLMSCvrlFMwlSlFcNwqDVVpJcfjzVDf",
  "cRdRDhsDFzPztwJdGP",
  "CVqpCqCgSNfCSQBpjtBwtlBBHLlmGjGG",
  "qfQfCVQfgQnVNpQCMqfcrFrwWDhrDnsvcRDsbc",
  "nFWWzqWZQSqnJzNJzslJVsdV",
  "vBBvsLvbBmBmRlGTNJJvRRTD",
  "tBbpmmPwCmHpMHHMrPCCcSnZSgcFcZgWFscSfgth",
  "LLssTJrqrpvrvvpJvdjggMlgzVgVggPlFPqz",
  "HwZwCZfHNtbMzjgVnFPC",
  "RSttfRwZDtBcZwQMQdrQsdTBQQmW",
  "lJnNhMJqljlNhSrdWlGGGQHwwH",
  "vbTpbCsTFCTmbSmcRfVCfRpwcPdwWQQrdwHwBHrPdwrLLB",
  "sVTmDfmCTVmJjgSzzntDtt",
  "DQtMjZHZHvMbwwTSpqLtpJ",
  "FzVFlsNdVczWPzWcslVfSLqLsqJpSwwsJswLrf",
  "dNFFWcmzWFGLWcdcFgvZvvRHQvjMHDMBGD",
  "MVPTmPvbMgrTmmmmMRMvPvBwFGhhDCdFFwLCLdJhDGFRhG",
  "fqqWfpZWzWsDwhwdhwqGLD",
  "ZWSSftStnnplcQLSbVMBvTbrMlbrBvvl",
  "FSsHDmtFLbbFbLGg",
  "vrvzTzWzzzvppzSzTMnfTggjVgbgjbLjgPPnbGbVGL",
  "pdMwrBpfwfSMTTWdMTpBDCBtmsmltslcBDCshDHs",
  "RgbmfGtmRVgLLSVSnSrWWSHhnh",
  "ccTvlvNppsFnbFnhnWnPHJ",
  "pqNjDBjNNjvpZfmtjbCLbCmb",
  "qsSVpSVfWqgNrVtWptpmSfqbPQljbHPHlDnljRSlwSnwQn",
  "dcGBrMFMdLTGGdlwDwMRHwwMbjHP",
  "CFBvhFhTLFCGvFchChBdBTJtsNpWqfVgtszprmVWNqNgvV",
  "sjsTgNSNqSjgMmVPmmmrpH",
  "RftCcWddRCZfPtCfcQZdcZDcrBllBFpVHprHWlHHpHJJmlFp",
  "thPZRtLcDRdDCTTsqbnwjhvNjq",
  "TQPtgfgdPcdSQhjwHhHBLS",
  "RrqCqVVbJmVRJmsrzmJpWljlSHLSBwSSRWllWv",
  "CVrDNbHrJHVMCbrDJsdFdFcPFZngMfFdTPfP",
  "NNlZgndqmGVGGVZNWQmWmbhbbhpbbhtCbhtgCpCtMF",
  "THfLPTzwJTJrvHRwwsbFbhfbMCpphVtBbB",
  "RjrvzHLzPDvLzPHrTJVrwPndZQNlDZGndZWDdNNcmlQq",
  "tjDsjDGtTjVVbQVCggvrbg",
  "qrWWRBllRFrdlSMCdbSJCP",
  "cZcncRnhphpZWRNtrmsrGpHffmwH",
  "qpRjdcqTcMbbMRTwtnplnwnhPzhBhw",
  "FSFLvNrsPNrsGSLsrFSGfnwBQwZnZwhQQLwwQhnn",
  "sWNVmVmCFNWGsCrrjRTmMjRjPRqgJqJg",
  "sVCnzVpmFpVSnNFCmnmzwRFDWDdMllDccMdwDMjWjWlWjg",
  "BJbPJGGGHPZqZQbpMlWWMWlBljjjgDjh",
  "tGQPpZtfTPpqrHsVLSzmRNLtSFsN",
  "WCDlBWWlvMFWlQWpmSZdZnNmGfJZFZ",
  "LqjTjgtjPcHTTJgLThztcLTLnHnmdSpZdpdffnmZSppfGpSn",
  "PtzqzjtqJgggzhqqccqhrQMsMvMwrCwMlBvMwvvsvs",
  "NMsJfsHTMVbjnLnVsC",
  "htWllhmZcWDWBwhZPcmpVRjnVMRLCCjLFpCwRb",
  "PmZMrBtcPmZWhzDWBtMmJQdddHfQGNSqHqQGGTgr",
  "NmfnnsPlHnGqnlsNNmRPltRLvrhvrSGJSJjvFFFSSFJLhb",
  "PzQZccVPVwgPjrJSJjhFFpQr",
  "TdwBgdTVwzdwzlmNfRqPmqqTql",
  "BVLLBPmPmWBlMlLJnJlBlFQVgdRDdRZRZHpZjQzdRdZQdzQZ",
  "trGTsfbTTgHZptzSZW",
  "fsfTNcCqqNhhVhVFVhVBWLLB",
  "LJwgJNfbCvwCJCwBCCNhhHmGHWWSMWmWmbMmTmmGdS",
  "lzRnnltsstZzzRTfHtHWHGWftfHW",
  "ZFFzVFqzqlFcZscZpRZsNphjhjvjfgJhQgQvwvhC",
  "HHzcFNcHFjhjZjlrghLL",
  "pMZJptpZWCmpttRMCWnnDnBGGDLhlLQrhl",
  "MJsMCTZTTpTJRmMCJzfNsNcfNHqzvvfcww",
  "ZDtllsDlVsrQBqQqRfWl",
  "wvJgpPhhscgvpJFNrRjRrWRjqrRjdjRv",
  "zpsNzCsNCJCCPPHSLzznMnDSLGLM",
  "rfrJjFWrwjpnJjjjfrjJJnFVTgTggRWRRRPPLQgCgQcPPT",
  "sSNbSvqmsSZDZZBtNTTPGgMLMRVcgPCMRb",
  "zZDZzNNSmrfpjFCjzj",
  "dbbNJPBbbrFqNqttqrGbqDcmDQRmFmwcwSnQSDcpwS",
  "ZMMTsHjzLlLcnSVwpRRQ",
  "hZTWjWvTZzTTWhszfwbJhrgJqtBbJGdqNPqt",
  "rrqgHrgtcHJRRjWZlRvnnWBn",
  "QbhVmdFppwbdjnMvlnBwMWZP",
  "TpFDdVTFTDfhHfJcSJSzGZGf",
  "sqNTNZHsHjjFBBwJMMNMcCJD",
  "WGLQPjfWfQWPWmtLSRRRLwBJDbtCCJJCbbwCMBbMBc",
  "RnPdLQfPLRdndGGRvfjlgdrTTgTsrgTrZFzF",
  "BfHbjVVqSBFfMSlCLCDrGSQssvlr",
  "tTpnnzpcPnwzhcnJTDtTPRprGlRGGGCWlQsWvrlvrQGQrC",
  "DPwhghDTpPVHqqdgZbZq",
  "ZzPqfGPtRtqfqPbqfGgGZbrhMjmjBCpHpHNCmHtHjmBHnj",
  "QJwllvFWwDvnwCBBzjwwpC",
  "ccJLVQzWFJvVJlVbgrZZLZLRRPSgdr",
  "rBGbLbnTfnZrQbTnHldqsMmHsqlsWfMd",
  "JcJjCCPzPtjCNHdlGGMlll",
  "jjgpRRvcGbwpThVppT",
  "ttDfjtqfjtpTWWwfTbtlWccNGRSZNGPGhZGhGhcwRh",
  "LbCrHdvzLSSHmSRNmc",
  "JCsBvrvBLzFQbbvlVVnpQpDtWlDqfq",
  "vvdvJBfvdTvRBflBJPNmmffmgPCMwDgsss",
  "rFjqLnMcnqrrtMLtjNgCPCsNzzgsPCGFNs",
  "VqLqnLVZqjMZqWnrVtWlZJJSvHvBdRSvBdRvvJ",
  "zZBDzgQQZLlcglzjrCrCMFjGZbMsHm",
  "PnnJVRfttTtwVnnVFGHVsjCFCjrsMM",
  "wPRpRpRnNTpPNlBdQQDdgDNMhN",
  "bNQpFpnwgtDHpbnhWtffmfmhvhhfsZ",
  "LcdLdwCLPPSVSqqwZGhWdJhGJZhlGlsm",
  "TBwSLPSPVRSVqSVqVrcnpMDDngMgnQpbRQFDNH",
  "vPSvBJZSSdJgpJJZBDGDGrdqGdllGrGDrh",
  "HMtsltFlRVVFtlscRjjMcsWwWChWmrnwDWGwChmjGCWq",
  "MQHNlTVHNVHpbbpbTvvBvf",
  "VsbPMwhbWhzdpzNNggnBcTBWNngQ",
  "RmtZZFZqSjqVHmGQNcBHNLGLGHQH",
  "JjRClqCjZlDZmqSqljFZZqRCvsvPfshhMdwsDwbVwzMzhffb",
  "bfGtRgfDtVmsMzTbmz",
  "LjGZwQLLdjFdHLNMhmzBzMNHNmzN",
  "wjQLCFvnnQGdZLGWSjdqWDfPlrRpqRDDRqrpPr",
  "pqnBZqjCNCqQqmllpHGMGdTfML",
  "PsFgrRvSPsWTwWWQwGHLHW",
  "SrvgsFbrrPJJFsrFPtFSCChBDQjqCqtNhDqhCqNC",
  "RJZRWZWMWZPZffRCPWMdRdfQQQjJzHQsssjrSQFVschVHr",
  "NgpnDgvGTNTVFHFFjVFF",
  "jntvgljpGvlnbLtLbBvnLRPlCCwwCfRqMCCqqqddqw",
  "PFBMVDSVPHMTThtMtSBMMVNbQprHbNRgNRRgLnvpnjnN",
  "scGcrcwlswdGlcqvbQgnnpQnqLjnpp",
  "ffwswWzcmlcWWsmcZhrDFrZMFZBMFzhM",
  "LMdZGqdRSSZmCZMRfQjnggvlvggRcznz",
  "tjjFhBrtpthpslcvvlcQzFnFvQ",
  "jrhbjtpJtbZqCLdWLq",
  "HBGBfBttZzbGbljPdpFddFqRmqRzRN",
  "JDWghDDSDqmmDDpc",
  "CLvgMvChCvLphCTSShhMhQsBbfTfsGsrBfjfrljrZZff",
  "RgHgDqDzqQqgcdHqcZGTNlGffGBDGZBTGZ",
  "LFLPWsmvrbwhwwswrTlTTCBNGFfGlNJZNS",
  "vhrLnvhNmWvMsrvwqMdRcptQtztcjptz",
  "sLMLsThhjgqLlsnsLgTLtMFcRbcPcJSwJbbSbtSWScSt",
  "fvrjjDjvNprdPwwJCCSrWPFP",
  "vfZdGzVzfvGGVGpBjnnMglTsgZlqsMlM",
  "TCVMfCfBnHHfLLPFWb",
  "GgQlGJzNzbzHcHHLlcPLHL",
  "tQbNQGgRZZCVtVMZ",
  "QFFMzwjwngsvsBjGGJWbBbBWbB",
  "QdmVDmVDWRPWVPVV",
  "QHtHSdDpLQCCSHrtqrdrttDfLgvnFvFghNszzwgngFwsNF",
  "RzzTNpSRBzSBVpSRlHNSHBSSGPcLNGtjhPPcbcGhPPhcrnct",
  "CCmmCwwdfFJqDmdwsddhsmvdcMbLfcftttbPnjMPbcjPMPbP",
  "mdZQmvssFdqsFZvsZQmvDvmWzgQBWTRzTzHlppWRglHBQh",
  "VWmnfQWzWWnHWMfmmMVNMfWjtBtBNSNSrlStlpjJBBlgBS",
  "cZZvbwsZsbbZvvscCRdFTTTQrBStdBJgSdhjgBjBjJjpJJ",
  "wCFTCbZbFwwCTvFTwsPGccMzMDWVWfzLGmqHnnDHGLQL",
  "sNQQHbbhdlpdrQllqpsqSpGjZDZGgDnVcnjjnnDZ",
  "WWRLGFvJBJPvzzWjnTncDVZTTPgDff",
  "FLRLGRFRJLBWJmJzMRLCvldrMrbbltdhQQlNqtMbsb",
  "HZllwlZSlSZwhvmQjcZhTqcT",
  "sPzzdgpszpzsBdvvMccvcqPThjhM",
  "JDdsDspLzsdzBgVdBGBzCLlwbbwWSnlnnWffHwJcNlHw",
  "nzCTCnpqJqfCnvvjZjWjPcZrmcmZfW",
  "GNdwgVjwRdRglMrPWLPWZWcNWW",
  "dVblgtRwQgSGVBldbQBbBRJnQJTsJHTqnzzJFpjvHnnn",
  "dqpQQrdqQpLfqcGSdggQdgRMmwHBMMBVNRNDFFBDBgNt",
  "vTzsnZCnlCnshbPlvZJbBzVmmVRDNwtHFBwMDVBR",
  "lJCshjTJbVqfVdjjjG",
  "WlLCJlHLcZcJWcWZJnLHnPqlFtSthTnFNThVtNhVhvNVzVtF",
  "QfbgRsspfDRsgfjqqRRpDbSNSTFzBbTbhttVBhVNBzzT",
  "fwgfRdpdfQDqgPHHZJZCcdGddH",
  "sbrbmVmfddzJntZZtwtMMf",
  "PvhwPRlvvWhFvSRhpFMMJGMFppnBTBGJ",
  "RPlCCLDPDClwHbrdzsdNLzgs",
  "HZgqtgbqRZvzwzCh",
  "BFqmGfrNLQfhzJWBhRJwJR",
  "LFqFQjrcrcqFNMmMdHggntDPMnsDbn",
  "NmWmPblGnnTTNlFGPmNWfwdchdlHdBdwcfCfZppZ",
  "rzqzRjgVrJrzzcFdqdCBFBhZhH",
  "VDRsRMjRJJrQsJPTGFNvsbnsnLGm",
  "nrbrBLTffjNRzGQSJHJQGT",
  "tcZqMcppCmHRQPGGCG",
  "pMDcZhpgcpFDfrwNDDrLVjGj",
  "LWlmlmWqvrBMWWBlmjLThBrfPJZfZZCwPCJJwPCTcggCsd",
  "pSbRHbzpHDVFRQRfPdfnZswgcJcppp",
  "SzRNGbzSWNPLWqLv",
  "vqslblpspsvqBFSqcrrZZDdTfFPHccrf",
  "GWRhWmjwhRcQdCDrPjDP",
  "mcWLVnnWJgGRzVSsVSpSSptNpMvb",
  "wHTPfdTvHlPHGpdvvTddGfcJLLWWwWWcCWrqrVMWCVLL",
  "zhsSNZhnshNSnvZmvsCWWSLrVMcrSCLWJcrq",
  "snDnshmNsjnTdHPfDGvdDT",
  "CfrnFFMnnsRNrNCwFCrdssgqgqvVZvZqlTWBNWZqlJBW",
  "htDhDLhwPWWBqTghgB",
  "DPLPzHDtSPStjLGLtzSMwbdMdnCHrRdCFsmfnR",
  "nBNWCvJmVPNnCPNDJWbtmSwqTttcQsSqtqTjQQ",
  "pMflzLlffRRMRdFlflpLddGdsTjwHqzcvwTqtsStQQjtwwsQ",
  "ZhGlphlpvvLLfFGvMLhfrfWNJNNPVPbnPhnDgDbDDNbJ",
  "ZCpCmVlZvlpBBwvvMCrJhrfhMfjjWMSG",
  "qhstFzFFqzHGzNfSMJSGzM",
  "QnHRPRgRQPtPhtnDsqsbDQPBlTcpBwmVmTvbwdwBTVZVpl",
  "PHmqHdddqBWMmTvMvTGMBWPdwhssnnHlhgsNwhwNHQzwrswh",
  "cSbVcDLtbfLSFzhlhJswgtrsww",
  "bSLlFLFFLDZVLpZVjFLdPMdBBqGGPmmqWGdGjM",
  "FQCnQwFRbnrSfgQgwFRCnswmPLpMppPdMMllpLMptMLldPSZ",
  "cJhhJcJVBJjhfHDvJqThvVDcpdGGqdZGdlltpqWdMqpdGWtG",
  "HhzTjJBzJTvNJHvzvvNBzBFnFCNCbCwrbnRbgRwfwQsg",
  "jRzDgbDDQDgVqqDGsjttNdwqNJZNwNdTWrpB",
  "MHvvvlSHFllMhhMrpWBJtlWdpJrTwZ",
  "mFcFFHmCmtcvfvFFHHLDGnRVzjDgnmgmnzGgGg",
  "JJhDpDdmsJJdgmhrpPjGjFLPPSNpjL",
  "WbznbRGnPfrfRSrN",
  "WqGnnVGVMGHtWTCgJvZHggBggZCg",
  "wlrPQtZQvwrzlvNfZLMZBjbbqjqLbSBjTg",
  "PGJDVdsdhsPVPjbTcLcGLgjqbM",
  "VPDRHWRdsRQvpfmmlw",
  "pvTZTSpTZvGGphNvvbDpdrMqrjlWdPqqjWdldNrd",
  "gmmJmsQfJgcRQJQJJncVQjMWllSnqljqBlPPjPHHHH",
  "QVJQRVcwmJcchwpSZLwGbSZZ",
  "zjrDMWcjDzQjDlWrnqqRBRNhBJRBhBJqnf",
  "TTGPPdgGLwdHGwGPTgLbbvhHtRRNRRSfchqRvSqHRJ",
  "TZTccPpdZwPQjllsspjVzD",
  "jHLHhHFRjhcblDRRWbWTdtppLTntTnMmGLMvTp",
  "BBQBgBBCrrgqJqTtMZMpngdtpvpG",
  "QJJJQrsVsQQfQVPCNqsNSjHdhhdRHDNHFHFclh",
  "RbCLnvdtnLRLRbmLPpHdQCvmNJpJSZSJlgDzglGlzcclcDGD",
  "qBBwMjfsFMjsMbfWbwjlzDZlcWclJczgNDGNDl",
  "wqjhrwwhhCvbQPrRnC",
  "vpWDDDWZQQNGllwHlwWVGj",
  "LCPdqdcdtsvdsCtsddvmVrVjjrBwHlmswmBnmw",
  "fLfvSgvMfdCPqzZNThfNNpTJJQ",
  "CVVVLbNVmGNQbGbGHHbHbvdwgQlwJDTFgJQdDZDJFD",
  "ssWBsBWrjSzWrPtBjnSCTwvFZlDjwZDdgwTDwggv",
  "nntPBqBrPsBfnCRCBWzCVcGVHMLNcbHLNmHqGphp",
  "sbbwwzdsbqQQbQnnNbPNGbznHHRdLTggMVHFVvRZTRVRHMZF",
  "mWffDWfflBpfmcWjWrrJVvgRLlMZVVhMFFTlHhMM",
  "rJJCctmjcfvzsqsqbtbqPP",
  "HGWjHWzVctQVcJVtjvRsvLTddqDDDsjRLg",
  "bbMnlNChZQLZhdDs",
  "SMMMMMMNmMllSlrmCczGcVzBcGWFBQGcrt",
  "VwQlqcLfdLGqdqDjjgZrjZBdttjd",
  "zSPPPJzJGjJjZrCBDt",
  "WMTMsTWsccsvGGwH",
  "hZvbQrjTTZjZcjWNrjnQrcTRpGMqcRfRRGzHfHfpfRMqRz",
  "mDJlFmwCVVwbCVbPBRLMMLpRLwRLHqpR",
  "gsCmgJsPDCtCVlvbhgQjhgQbnQbd",
  "fSgbhhGPGJGhRDmlhhHcHDBH",
  "LsMwQWFswsQMsQMvjslcBcDldBTWfDcHRRdl",
  "ZpVFwLQwVLQvCVsMjrJbbCNPbzSJtPbPPf",
  "VDzWMCpfCcCRDzqDzqNnvLZnfntHQnPPLQlt",
  "sJmdbTBdmmGhFhhbJNNQlJnQlQLHPZNn",
  "sdwmwsdrmMRpDRMLcw",
  "JpWmSWpCnCbJBZHZVldbdfZf",
  "rgdrgNdrjgNPrMjwTssrPdfDZqsVfQHDFlQDDHQVsZfB",
  "TRPdNNLgjNwrRTrJpppzCmzmCLSnvS",
  "QbtQJHQmbmfmBRvbQRzBvldqcFljsGcFdGdvsqqGls",
  "ChCPWhDhWZWJVnZpCNChhVDcMcDdcdgGscjgFjGFlsjjGq",
  "WZNTWNhNZfJJbTJTmR",
  "CHGCHFcZvCrchrZrhsVtsBQjMstfZMMBgg",
  "NNqwDLmDjJgQBmVQ",
  "wdWLLTgWRTWcCcbrHCHhGW",
  "bTZZvNjNjLgTCHcWhccfhWJdhvnc",
  "mnFFmPGSwRPShzVPPWPdhhzr",
  "FRtBFGBMFQFttRwtZgTjCTnQNbNLjTCH",
  "bJSqrSpDJbSNbFjSFCfPWGcwGWPrcTCfwr",
  "tRtLhDsvhQZlHRhRtQQnCnCcdwCPwTwdGcGP",
  "HsHvsmBZvmvsmBhHvLssVqDSNgFMDzgbbDVJzbpMVq",
  "nSSDHRRRQRBCLCQC",
  "qGmfPzGmGlrrrpfrqlzrJtLvBlhQbSCvbtCtlFhLFC",
  "zzpmqqJJVVfJfPfMpfdHNndsNwDSMSDDNcsc",
  "CscQsVMhCsMsMHhhVthtwmgZNRqzWLBRLRLmBWmZWBND",
  "JQJdddrjrLqBgDBq",
  "QbFlTffpMbMnsPCh",
  "gDdbVbVDddDfVfWQfBRLQZsZLRQQ",
  "FCCTrGCMStwGHTtTWLQhLZrlRssRhRhp",
  "FSHqtFTmFwmCsSwGTHtMTSdjjcdnVddgzmbVmjmndbbD",
  "JtBBMcLWLdfFLhMttcWWhfWLrTRGFsbwTmRGwmwbbCTGGsbD",
  "PzQpSQQQvzVvpzHqjvNvQSvGRmmTDVRDmsGsRGsrcDcDGC",
  "cQPHSPvPvZHqcZjzpZjnZNtWlLdtldJWfnfhlJJtLdMg",
  "nPPssTBnMJPdtHPVHtRhpv",
  "bSSgGFWDgWwDFFlmWlcShqdpRqpVcHvvnqpvpRHd",
  "bGFnGljgSsjBCTBszz",
];

console.log(`Sum of priorities: ${sumOfPriorities(input)}`);

const findBadge = (items) => {
  let sets = [new Set(), new Set(), new Set()];
  for (i = 0; i < items.length; i++) for (const c of items[i]) sets[i].add(c);
  for (const value of sets[0]) {
    if (sets[1].has(value) && sets[2].has(value)) return value;
  }
};

const sumOfBadgePriorities = (input) => {
  let sum = 0;
  for (let i = 0; i < input.length - 2; i += 3) {
    const badge = findBadge(input.slice(i, i + 3));
    const br = getPriorityOfItem(badge);
    sum += br;
  }
  return sum;
};

console.log(`Sum of badge priorities: ${sumOfBadgePriorities(input)}`);
